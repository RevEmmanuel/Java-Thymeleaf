CREATE TABLE IF NOT EXISTS vets (
  id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  first_name TEXT,
  last_name  TEXT
);
CREATE INDEX ON vets (last_name);

CREATE TABLE IF NOT EXISTS specialties (
  id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT
);
CREATE INDEX ON specialties (name);

CREATE TABLE IF NOT EXISTS vet_specialties (
  vet_id       INT NOT NULL REFERENCES vets (id),
  specialty_id INT NOT NULL REFERENCES specialties (id),
  UNIQUE (vet_id, specialty_id)
);

CREATE TABLE IF NOT EXISTS types (
  id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT
);
CREATE INDEX ON types (name);

CREATE TABLE IF NOT EXISTS owners (
  id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  first_name TEXT,
  last_name  TEXT,
  address    TEXT,
  city       TEXT,
  telephone  TEXT
);
CREATE INDEX ON owners (last_name);

CREATE TABLE IF NOT EXISTS pets (
  id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name       TEXT,
  birth_date DATE,
  type_id    INT NOT NULL REFERENCES types (id),
  owner_id   INT REFERENCES owners (id)
);
CREATE INDEX ON pets (name);
CREATE INDEX ON pets (owner_id);

CREATE TABLE IF NOT EXISTS visits (
  id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  pet_id      INT REFERENCES pets (id),
  visit_date  DATE,
  description TEXT
);
CREATE INDEX ON visits (pet_id);


-- Add new columns
ALTER TABLE vets
  ADD COLUMN country TEXT,
  ADD COLUMN license_expire_date DATE,
  ADD COLUMN password TEXT;

ALTER TABLE owners
  ADD COLUMN password TEXT;


-- Update existing records with default password 'password'
-- UPDATE vets
-- SET password = 'password'
-- WHERE password IS NULL;
-- UPDATE owners
-- SET password = 'password'
-- WHERE password IS NULL;


-- Add new table taxes (fields: id, country, percentage)
CREATE TABLE IF NOT EXISTS taxes (
                                   id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   country    TEXT,
                                   percentage DECIMAL(5, 2)  -- Assuming percentage values will be stored with two decimal places
  );
CREATE INDEX ON taxes (country);

-- Add new table vet_service (fields: id, vet_id, service_name, service_price)
CREATE TABLE IF NOT EXISTS vet_service (
                                         id            INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                         vet_id        INT NOT NULL REFERENCES vets (id),
  service_name  TEXT,
  service_price DECIMAL(10, 2)  -- Assuming prices will be stored with two decimal places
  );
CREATE INDEX ON vet_service (vet_id);
CREATE INDEX ON vet_service (service_name);

-- Add new table vet_orders (fields: id, pet_id, vet_id, vet_service_id, payment_method, amount, tax, total, status)
CREATE TABLE IF NOT EXISTS vet_orders (
                                        id             INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                        pet_id         INT REFERENCES pets (id),
  vet_id         INT REFERENCES vets (id),
  vet_service_id INT REFERENCES vet_service (id),
  payment_method TEXT,
  amount         DECIMAL(10, 2),  -- Assuming amounts will be stored with two decimal places
  tax            DECIMAL(5, 2),   -- Assuming tax values will be stored with two decimal places
  total          DECIMAL(10, 2),  -- Assuming total values will be stored with two decimal places
  status         TEXT
  );
CREATE INDEX ON vet_orders (pet_id);
CREATE INDEX ON vet_orders (vet_id);
CREATE INDEX ON vet_orders (vet_service_id);
CREATE INDEX ON vet_orders (payment_method);
CREATE INDEX ON vet_orders (status);
